service: mintable-lite

plugins:
  - serverless-dynamodb
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3000
  dynamodb:
  # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-southeast-1'}
  environment:
    TABLE_NAME: mintable
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TABLE_NAME}"


resources:
  Resources:
    MintableTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: mintId
            AttributeType: S
        KeySchema:
          - AttributeName: mintId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

functions:
  mint:
    handler: dist/handler.mint
    events:
      - http:
          path: mint
          method: post
  get:
    handler: dist/handler.get
    events:
      - http:
          path: get
          method: get
  list:
    handler: dist/handler.list
    events:
      - http:
          path: list
          method: get